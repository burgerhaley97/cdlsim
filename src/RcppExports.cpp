// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// transition_function
int transition_function(NumericVector cell_values, NumericMatrix transition_matrix, IntegerVector row_names, IntegerVector col_names);
RcppExport SEXP _cdlsim_transition_function(SEXP cell_valuesSEXP, SEXP transition_matrixSEXP, SEXP row_namesSEXP, SEXP col_namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type cell_values(cell_valuesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type transition_matrix(transition_matrixSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type row_names(row_namesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type col_names(col_namesSEXP);
    rcpp_result_gen = Rcpp::wrap(transition_function(cell_values, transition_matrix, row_names, col_names));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cdlsim_transition_function", (DL_FUNC) &_cdlsim_transition_function, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_cdlsim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
